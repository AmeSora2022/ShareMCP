{
  "categories": [
    {
      "id": 1,
      "name": "浏览器自动化",
      "description": "Web 内容访问和自动化功能。支持以 AI 友好格式搜索、抓取和处理 Web 内容。",
      "icon": "🌐",
      "items": [
        {
          "id": 101,
          "name": "playwright-plus-python-mcp",
          "author": "blackwhite084",
          "description": "使用 Playwright 进行浏览器自动化的 MCP 服务器，更适合llm",
          "url": "https://github.com/blackwhite084/playwright-plus-python-mcp",
          "tags": ["🌐", "Python", "Playwright", "LLM"]
        },
        {
          "id": 102,
          "name": "playwright-mcp-server",
          "author": "executeautomation",
          "description": "使用 Playwright 进行浏览器自动化和网页抓取的 MCP 服务器",
          "url": "https://github.com/executeautomation/mcp-playwright",
          "tags": ["🌐", "⚡️", "Playwright", "Web Scraping"]
        },
        {
          "id": 103,
          "name": "mcp-server-playwright",
          "author": "automatalabs",
          "description": "使用 Playwright 实现浏览器自动化的 MCP 服务器",
          "url": "https://github.com/Automata-Labs-team/MCP-Server-Playwright",
          "tags": ["🌐", "🖱️", "Playwright", "Automation"]
        },
        {
          "id": 104,
          "name": "server-puppeteer",
          "author": "modelcontextprotocol",
          "description": "用于网页抓取和交互的浏览器自动化",
          "url": "https://github.com/modelcontextprotocol/servers/tree/main/src/puppeteer",
          "tags": ["📇", "🏠", "Puppeteer", "Web Scraping"]
        },
        {
          "id": 105,
          "name": "mcp-server-youtube-transcript",
          "author": "kimtaeyoon83",
          "description": "获取 YouTube 字幕和文字记录以供 AI 分析",
          "url": "https://github.com/kimtaeyoon83/mcp-server-youtube-transcript",
          "tags": ["📇", "☁️", "YouTube", "Transcript"]
        },
        {
          "id": 106,
          "name": "mcp-server-apple-shortcuts",
          "author": "recursechat",
          "description": "MCP 服务器与 Apple Shortcuts 的集成",
          "url": "https://github.com/recursechat/mcp-server-apple-shortcuts",
          "tags": ["📇", "🏠", "🍎", "Apple", "Shortcuts"]
        },
        {
          "id": 107,
          "name": "mcp-aoai-web-browsing",
          "author": "kimtth",
          "description": "使用 Azure OpenAI 和 Playwright 的\"最小\"服务器/客户端 MCP 实现",
          "url": "https://github.com/kimtth/mcp-aoai-web-browsing",
          "tags": ["🐍", "🏠", "Azure", "OpenAI", "Playwright"]
        },
        {
          "id": 108,
          "name": "web-search",
          "author": "pskill9",
          "description": "一个支持使用 Google 搜索结果进行免费网页搜索的 MCP 服务器，无需 API 密钥",
          "url": "https://github.com/pskill9/web-search",
          "tags": ["📇", "🏠", "Google", "Search"]
        }
      ]
    },
    {
      "id": 2,
      "name": "艺术与文化",
      "description": "提供艺术收藏、文化遗产和博物馆数据库的访问与探索。让 AI 模型能够搜索和分析艺术文化内容。",
      "icon": "🎨",
      "items": [
        {
          "id": 201,
          "name": "video-editing-mcp",
          "author": "burningion",
          "description": "从您的视频集合中添加、分析、搜索和生成视频剪辑",
          "url": "https://github.com/burningion/video-editing-mcp",
          "tags": ["📹", "🎬", "Video", "Editing"]
        },
        {
          "id": 202,
          "name": "rijksmuseum-mcp",
          "author": "r-huijts",
          "description": "荷兰国立博物馆 API 集成，支持艺术品搜索、详情查询和收藏品浏览",
          "url": "https://github.com/r-huijts/rijksmuseum-mcp",
          "tags": ["📇", "☁️", "Museum", "Art"]
        }
      ]
    },
    {
      "id": 3,
      "name": "云平台",
      "description": "云平台服务集成。实现与云基础设施和服务的管理和交互。",
      "icon": "☁️",
      "items": [
        {
          "id": 301,
          "name": "mcp-server-cloudflare",
          "author": "cloudflare",
          "description": "与 Cloudflare 服务集成，包括 Workers、KV、R2 和 D1",
          "url": "https://github.com/cloudflare/mcp-server-cloudflare",
          "tags": ["🎖️", "📇", "☁️", "Cloudflare"]
        },
        {
          "id": 302,
          "name": "mcp-k8s-go",
          "author": "strowk",
          "description": "通过 MCP 操作 Kubernetes 集群",
          "url": "https://github.com/strowk/mcp-k8s-go",
          "tags": ["🏎️", "☁️", "Kubernetes", "Go"]
        },
        {
          "id": 303,
          "name": "mcp-server-kubernetes",
          "author": "flux159",
          "description": "使用 Typescript 实现 Kubernetes 集群中针对 pod、部署、服务的操作",
          "url": "https://github.com/Flux159/mcp-server-kubernetes",
          "tags": ["📇", "☁️", "🏠", "Kubernetes", "TypeScript"]
        },
        {
          "id": 304,
          "name": "netskope-mcp",
          "author": "johnneerdael",
          "description": "提供对 Netskope Private Access 环境中所有组件的访问权限，包含详细的设置信息和 LLM 使用示例",
          "url": "https://github.com/johnneerdael/netskope-mcp",
          "tags": ["🔒", "☁️", "Netskope", "Security"]
        }
      ]
    },
    {
      "id": 4,
      "name": "命令行",
      "description": "运行命令、捕获输出以及以其他方式与 shell 和命令行工具交互。",
      "icon": "🖥️",
      "items": [
        {
          "id": 401,
          "name": "iterm-mcp",
          "author": "ferrislucas",
          "description": "一个为 iTerm 终端提供访问能力的 MCP 服务器。您可以执行命令，并就终端中看到的内容进行提问交互。",
          "url": "https://github.com/ferrislucas/iterm-mcp",
          "tags": ["🖥️", "🛠️", "💬", "iTerm", "Terminal"]
        },
        {
          "id": 402,
          "name": "mcp-server-commands",
          "author": "g0t4",
          "description": "使用\"run_command\"和\"run_script\"工具运行任何命令",
          "url": "https://github.com/g0t4/mcp-server-commands",
          "tags": ["📇", "🏠", "CLI", "Commands"]
        },
        {
          "id": 403,
          "name": "cli-mcp-server",
          "author": "MladenSU",
          "description": "具有安全执行和可定制安全策略的命令行界面",
          "url": "https://github.com/MladenSU/cli-mcp-server",
          "tags": ["🐍", "🏠", "CLI", "Security"]
        },
        {
          "id": 404,
          "name": "mcp-shell-server",
          "author": "tumf",
          "description": "实现模型上下文协议 (MCP) 的安全 shell 命令执行服务器",
          "url": "https://github.com/tumf/mcp-shell-server",
          "tags": ["🖥️", "🔒", "Shell", "Security"]
        }
      ]
    },
    {
      "id": 5,
      "name": "社交",
      "description": "与通讯平台集成，实现消息管理和渠道运营。使AI模型能够与团队沟通工具进行交互。",
      "icon": "💬",
      "items": [
        {
          "id": 501,
          "name": "gtasks-mcp",
          "author": "zcaceres",
          "description": "用于管理 Google Tasks 的 MCP 服务器",
          "url": "https://github.com/zcaceres/gtasks-mcp",
          "tags": ["📇", "☁️", "Google", "Tasks"]
        },
        {
          "id": 502,
          "name": "imessage-query-fastmcp-mcp-server",
          "author": "hannesrudolph",
          "description": "MCP 服务器通过模型上下文协议 (MCP) 提供对 iMessage 数据库的安全访问，使 LLM 能够通过适当的电话号码验证和附件处理来查询和分析 iMessage 对话",
          "url": "https://github.com/hannesrudolph/imessage-query-fastmcp-mcp-server",
          "tags": ["🐍", "🏠", "🍎", "iMessage", "Chat"]
        },
        {
          "id": 503,
          "name": "server-slack",
          "author": "modelcontextprotocol",
          "description": "用于频道管理和消息传递的 Slack 工作区集成",
          "url": "https://github.com/modelcontextprotocol/servers/tree/main/src/slack",
          "tags": ["📇", "☁️", "Slack", "Messaging"]
        },
        {
          "id": 504,
          "name": "bluesky-context-server",
          "author": "keturiosakys",
          "description": "Bluesky 实例集成，用于查询和交互",
          "url": "https://github.com/keturiosakys/bluesky-context-server",
          "tags": ["📇", "☁️", "Bluesky", "Social"]
        },
        {
          "id": 505,
          "name": "mcp-gsuite",
          "author": "MarkusPfundstein",
          "description": "与 Gmail 和 Google 日历集成",
          "url": "https://github.com/MarkusPfundstein/mcp-gsuite",
          "tags": ["🐍", "☁️", "Gmail", "Calendar"]
        },
        {
          "id": 506,
          "name": "mcp-twikit",
          "author": "adhikasp",
          "description": "与 Twitter 搜索和时间线进行交互",
          "url": "https://github.com/adhikasp/mcp-twikit",
          "tags": ["🐍", "☁️", "Twitter", "Timeline"]
        },
        {
          "id": 507,
          "name": "mcp-wecombot-server",
          "author": "gotoolkits",
          "description": "MCP服务器 Tools 应用程序，用于向企业微信群机器人发送各种类型的消息",
          "url": "https://github.com/gotoolkits/mcp-wecombot-server.git",
          "tags": ["🚀", "☁️", "WeChat", "Bot"]
        },
        {
          "id": 508,
          "name": "nostr-mcp",
          "author": "AbdelStark",
          "description": "Nostr MCP 服务器，支持与 Nostr 交互，可发布笔记等功能",
          "url": "https://github.com/AbdelStark/nostr-mcp",
          "tags": ["🌐", "☁️", "Nostr", "Notes"]
        }
      ]
    },
    {
      "id": 6,
      "name": "数据平台",
      "description": "提供对客户数据平台内客户资料的访问",
      "icon": "👤",
      "items": [
        {
          "id": 601,
          "name": "inoyu-mcp-unomi-server",
          "author": "sergehuber",
          "description": "MCP 服务器用于访问和更新 Apache Unomi CDP 服务器上的配置文件",
          "url": "https://github.com/sergehuber/inoyu-mcp-unomi-server",
          "tags": ["📇", "☁️", "Apache", "Unomi"]
        },
        {
          "id": 602,
          "name": "OpenDataMCP",
          "author": "OpenDataMCP",
          "description": "使用模型上下文协议将任何开放数据连接到任何 LLM",
          "url": "https://github.com/OpenDataMCP/OpenDataMCP",
          "tags": ["🐍", "☁️", "OpenData", "LLM"]
        },
        {
          "id": 603,
          "name": "mcp-tinybird",
          "author": "tinybirdco",
          "description": "MCP 服务器可从任何 MCP 客户端与 Tinybird Workspace 进行交互",
          "url": "https://github.com/tinybirdco/mcp-tinybird",
          "tags": ["🐍", "☁️", "Tinybird", "Analytics"]
        },
        {
          "id": 604,
          "name": "mcp-server-iaptic",
          "author": "iaptic",
          "description": "连接 iaptic 平台，让您轻松查询客户购买记录、交易数据以及应用营收统计信息",
          "url": "https://github.com/iaptic/mcp-server-iaptic",
          "tags": ["🎖️", "📇", "☁️", "iaptic", "Revenue"]
        }
      ]
    },
    {
      "id": 7,
      "name": "数据库",
      "description": "具有模式检查功能的安全数据库访问。支持使用可配置的安全控制（包括只读访问）查询和分析数据。",
      "icon": "🗄️",
      "items": [
        {
          "id": 701,
          "name": "elasticsearch-mcp-server",
          "author": "cr7258",
          "description": "集成 Elasticsearch 的 MCP 服务器实现",
          "url": "https://github.com/cr7258/elasticsearch-mcp-server",
          "tags": ["🐍", "🏠", "Elasticsearch", "Search"]
        },
        {
          "id": 702,
          "name": "airtable-mcp-server",
          "author": "domdomegg",
          "description": "Airtable 数据库集成，具有架构检查、读写功能",
          "url": "https://github.com/domdomegg/airtable-mcp-server",
          "tags": ["📇", "🏠", "Airtable", "Database"]
        },
        {
          "id": 703,
          "name": "mcp-server-bigquery",
          "author": "LucasHild",
          "description": "BigQuery 数据库集成了架构检查和查询功能",
          "url": "https://github.com/LucasHild/mcp-server-bigquery",
          "tags": ["🐍", "☁️", "BigQuery", "Google"]
        },
        {
          "id": 704,
          "name": "mcp-bigquery-server",
          "author": "ergut",
          "description": "Google BigQuery 集成的服务器实现，可实现直接 BigQuery 数据库访问和查询功能",
          "url": "https://github.com/ergut/mcp-bigquery-server",
          "tags": ["📇", "☁️", "BigQuery", "Google"]
        },
        {
          "id": 705,
          "name": "mcp-clickhouse",
          "author": "ClickHouse",
          "description": "集成 Apache Kafka 和 Timeplus。可以获取Kafka中的最新数据，并通过 Timeplus 来 SQL 查询",
          "url": "https://github.com/ClickHouse/mcp-clickhouse",
          "tags": ["🐍", "☁️", "ClickHouse", "Kafka"]
        },
        {
          "id": 706,
          "name": "mcp-timeplus",
          "author": "jovezhong",
          "description": "MCP server for Apache Kafka and Timeplus. Able to list Kafka topics, poll Kafka messages, save Kafka data locally and query streaming data with SQL via Timeplus",
          "url": "https://github.com/jovezhong/mcp-timeplus",
          "tags": ["🐍", "☁️", "Kafka", "Timeplus"]
        },
        {
          "id": 707,
          "name": "mcp-database-server",
          "author": "fireproof-storage",
          "description": "Fireproof 分布式账本数据库，支持多用户数据同步",
          "url": "https://github.com/fireproof-storage/mcp-database-server",
          "tags": ["📇", "☁️", "Fireproof", "Distributed"]
        },
        {
          "id": 708,
          "name": "mysql_mcp_server",
          "author": "designcomputer",
          "description": "MySQL 数据库集成可配置的访问控制、模式检查和全面的安全指南",
          "url": "https://github.com/designcomputer/mysql_mcp_server",
          "tags": ["🐍", "🏠", "MySQL", "Security"]
        },
        {
          "id": 709,
          "name": "mcp-mysql-server",
          "author": "f4ww4z",
          "description": "基于 Node.js 的 MySQL 数据库集成，提供安全的 MySQL 数据库操作",
          "url": "https://github.com/f4ww4z/mcp-mysql-server",
          "tags": ["🐍", "🏠", "MySQL", "Node.js"]
        },
        {
          "id": 710,
          "name": "server-postgres",
          "author": "modelcontextprotocol",
          "description": "PostgreSQL 数据库集成了模式检查和查询功能",
          "url": "https://github.com/modelcontextprotocol/servers/tree/main/src/postgres",
          "tags": ["📇", "🏠", "PostgreSQL", "Database"]
        },
        {
          "id": 711,
          "name": "server-sqlite",
          "author": "modelcontextprotocol",
          "description": "具有内置分析功能的 SQLite 数据库操作",
          "url": "https://github.com/modelcontextprotocol/servers/tree/main/src/sqlite",
          "tags": ["🐍", "🏠", "SQLite", "Database"]
        },
        {
          "id": 712,
          "name": "supabase-mcp-server",
          "author": "joshuarileydev",
          "description": "Supabase MCP 服务器用于管理和创建 Supabase 中的项目和组织",
          "url": "https://github.com/joshuarileydev/supabase",
          "tags": ["📇", "☁️", "Supabase", "Projects"]
        },
        {
          "id": 713,
          "name": "mcp-server-duckdb",
          "author": "ktanaka101",
          "description": "DuckDB 数据库集成了模式检查和查询功能",
          "url": "https://github.com/ktanaka101/mcp-server-duckdb",
          "tags": ["🐍", "🏠", "DuckDB", "Analytics"]
        },
        {
          "id": 714,
          "name": "mongo-mcp",
          "author": "QuantGeekDev",
          "description": "MongoDB 集成使 LLM 能够直接与数据库交互",
          "url": "https://github.com/QuantGeekDev/mongo-mcp",
          "tags": ["📇", "🏠", "MongoDB", "Database"]
        },
        {
          "id": 715,
          "name": "mcp-mongo-server",
          "author": "kiliczsh",
          "description": "MongoDB 的模型上下文协议服务器",
          "url": "https://github.com/kiliczsh/mcp-mongo-server",
          "tags": ["📇", "🏠", "MongoDB", "Database"]
        },
        {
          "id": 716,
          "name": "vikingdb-mcp-server",
          "author": "KashiwaByte",
          "description": "VikingDB 数据库集成了collection和index的基本信息介绍，并提供向量存储和查询的功能",
          "url": "https://github.com/KashiwaByte/vikingdb-mcp-server",
          "tags": ["🐍", "☁️", "VikingDB", "Vector"]
        },
        {
          "id": 717,
          "name": "mcp-neo4j",
          "author": "neo4j-contrib",
          "description": "Neo4j 的模型上下文协议",
          "url": "https://github.com/neo4j-contrib/mcp-neo4j",
          "tags": ["🐍", "🏠", "Neo4j", "Graph"]
        },
        {
          "id": 718,
          "name": "mcp-snowflake-server",
          "author": "isaacwasserman",
          "description": "Snowflake 集成实现，支持读取和（可选）写入操作，并具备洞察跟踪功能",
          "url": "https://github.com/isaacwasserman/mcp-snowflake-server",
          "tags": ["🐍", "☁️", "Snowflake", "Analytics"]
        },
        {
          "id": 719,
          "name": "sqlite-explorer-fastmcp-mcp-server",
          "author": "hannesrudolph",
          "description": "一个 MCP 服务器，通过模型上下文协议 （MCP） 提供对 SQLite 数据库的安全只读访问。该服务器是使用 FastMCP 框架构建的，它使 LLM 能够探索和查询具有内置安全功能和查询验证的 SQLite 数据库",
          "url": "https://github.com/hannesrudolph/sqlite-explorer-fastmcp-mcp-server",
          "tags": ["🐍", "🏠", "SQLite", "Explorer"]
        },
        {
          "id": 720,
          "name": "mcp-pinecone",
          "author": "sirmews",
          "description": "Pinecone 与矢量搜索功能的集成",
          "url": "https://github.com/sirmews/mcp-pinecone",
          "tags": ["🐍", "☁️", "Pinecone", "Vector"]
        },
        {
          "id": 721,
          "name": "mcp-alchemy",
          "author": "runekaagaard",
          "description": "基于SQLAlchemy的通用数据库集成，支持PostgreSQL、MySQL、MariaDB、SQLite、Oracle、MS SQL Server等众多数据库。具有架构和关系检查以及大型数据集分析功能",
          "url": "https://github.com/runekaagaard/mcp-alchemy",
          "tags": ["🐍", "🏠", "SQLAlchemy", "Universal"]
        }
      ]
    },
    {
      "id": 8,
      "name": "开发者工具",
      "description": "增强开发工作流程和环境管理的工具和集成。",
      "icon": "💻",
      "items": [
        {
          "id": 801,
          "name": "docker-mcp",
          "author": "QuantGeekDev",
          "description": "通过 MCP 进行 Docker 容器管理和操作",
          "url": "https://github.com/QuantGeekDev/docker-mcp",
          "tags": ["🏎️", "🏠", "Docker", "Container"]
        },
        {
          "id": 802,
          "name": "fetch-mcp",
          "author": "zcaceres",
          "description": "一个灵活获取 JSON、文本和 HTML 数据的 MCP 服务器",
          "url": "https://github.com/zcaceres/fetch-mcp",
          "tags": ["📇", "🏠", "HTTP", "Data"]
        },
        {
          "id": 803,
          "name": "xcode-mcp-server",
          "author": "r-huijts",
          "description": "Xcode 集成，支持项目管理、文件操作和构建自动化",
          "url": "https://github.com/r-huijts/xcode-mcp-server",
          "tags": ["📇", "🏠", "🍎", "Xcode"]
        },
        {
          "id": 804,
          "name": "openapi-mcp-server",
          "author": "snaggle-ai",
          "description": "使用开放 API 规范 (v3) 连接任何 HTTP/REST API 服务器",
          "url": "https://github.com/snaggle-ai/openapi-mcp-server",
          "tags": ["🏎️", "🏠", "OpenAPI", "REST"]
        },
        {
          "id": 805,
          "name": "mcpProxy",
          "author": "jetbrains",
          "description": "连接到 JetBrains IDE",
          "url": "https://github.com/JetBrains/mcpProxy",
          "tags": ["🎖️", "📇", "🏠", "JetBrains"]
        },
        {
          "id": 806,
          "name": "mcp-text-editor",
          "author": "tumf",
          "description": "面向行的文本文件编辑器。针对 LLM 工具进行了优化，具有高效的部分文件访问功能，可最大限度地减少令牌使用量。",
          "url": "https://github.com/tumf/mcp-text-editor",
          "tags": ["🐍", "🏠", "Editor", "LLM"]
        },
        {
          "id": 807,
          "name": "simulator-mcp-server",
          "author": "joshuarileydev",
          "description": "用于控制 iOS 模拟器的 MCP 服务器",
          "url": "https://github.com/JoshuaRileyDev/simulator-mcp-server",
          "tags": ["📇", "🏠", "iOS", "Simulator"]
        },
        {
          "id": 808,
          "name": "app-store-connect-mcp-server",
          "author": "joshuarileydev",
          "description": "一个 MCP 服务器，用于与 iOS 开发者的 App Store Connect API 进行通信",
          "url": "https://github.com/JoshuaRileyDev/app-store-connect-mcp-server",
          "tags": ["📇", "🏠", "AppStore", "iOS"]
        },
        {
          "id": 809,
          "name": "mcp-package-version",
          "author": "sammcj",
          "description": "MCP 服务器可帮助 LLM 在编写代码时建议最新的稳定软件包版本。",
          "url": "https://github.com/sammcj/mcp-package-version",
          "tags": ["📦", "🏠", "Package", "Version"]
        },
        {
          "id": 810,
          "name": "postman-mcp-server",
          "author": "delano",
          "description": "与 Postman API 进行交互",
          "url": "https://github.com/delano/postman-mcp-server",
          "tags": ["📇", "☁️", "Postman", "API"]
        },
        {
          "id": 811,
          "name": "mcp-pandoc",
          "author": "vivekVells",
          "description": "基于 Pandoc 的 MCP 服务器，支持 Markdown、HTML、PDF、DOCX（.docx）、csv 等格式之间的无缝转换",
          "url": "https://github.com/vivekVells/mcp-pandoc",
          "tags": ["🗄️", "🚀", "Pandoc", "Convert"]
        },
        {
          "id": 812,
          "name": "website-downloader",
          "author": "pskill9",
          "description": "这个 MCP 服务器提供了使用 wget 下载完整网站的工具，可保留网站结构并转换链接以支持本地访问",
          "url": "https://github.com/pskill9/website-downloader",
          "tags": ["🗄️", "🚀", "Website", "Download"]
        },
        {
          "id": 813,
          "name": "mcp-server-sql-analyzer",
          "author": "j4c0bs",
          "description": "基于 SQLGlot 的 MCP 服务器，提供 SQL 分析、代码检查和方言转换功能",
          "url": "https://github.com/j4c0bs/mcp-server-sql-analyzer",
          "tags": ["🐍", "SQL", "Analyzer"]
        }
      ]
    },
    {
      "id": 9,
      "name": "数据科学工具",
      "description": "旨在简化数据探索、分析和增强数据科学工作流程的集成和工具。",
      "icon": "🧮",
      "items": [
        {
          "id": 901,
          "name": "mcp-server-data-exploration",
          "author": "reading-plus-ai",
          "description": "支持对基于 .csv 的数据集进行自主数据探索，以最小的成本提供智能见解。",
          "url": "https://github.com/reading-plus-ai/mcp-server-data-exploration",
          "tags": ["🐍", "☁️", "Data", "Analytics"]
        },
        {
          "id": 902,
          "name": "markdownify-mcp",
          "author": "zcaceres",
          "description": "一个 MCP 服务器，可将几乎任何文件或网络内容转换为 Markdown",
          "url": "https://github.com/zcaceres/markdownify-mcp",
          "tags": ["📇", "🏠", "Markdown", "Convert"]
        }
      ]
    },
    {
      "id": 10,
      "name": "文件系统",
      "description": "提供对本地文件系统的直接访问，并具有可配置的权限。使 AI 模型能够读取、写入和管理指定目录中的文件。",
      "icon": "📂",
      "items": [
        {
          "id": 1001,
          "name": "server-filesystem",
          "author": "modelcontextprotocol",
          "description": "直接访问本地文件系统。",
          "url": "https://github.com/modelcontextprotocol/servers/tree/main/src/filesystem",
          "tags": ["📇", "🏠", "Filesystem", "Local"]
        },
        {
          "id": 1002,
          "name": "server-google-drive",
          "author": "modelcontextprotocol",
          "description": "Google Drive 集成，用于列出、阅读和搜索文件",
          "url": "https://github.com/modelcontextprotocol/servers/tree/main/src/gdrive",
          "tags": ["📇", "☁️", "Google", "Drive"]
        },
        {
          "id": 1003,
          "name": "box-mcp-server",
          "author": "hmk",
          "description": "Box 集成，支持文件列表、阅读和搜索功能",
          "url": "https://github.com/hmk/box-mcp-server",
          "tags": ["📇", "☁️", "Box", "Storage"]
        },
        {
          "id": 1004,
          "name": "mcp-filesystem-server",
          "author": "mark3labs",
          "description": "用于本地文件系统访问的 Golang 实现。",
          "url": "https://github.com/mark3labs/mcp-filesystem-server",
          "tags": ["🏎️", "🏠", "Golang", "Filesystem"]
        },
        {
          "id": 1005,
          "name": "mcp-everything-search",
          "author": "mamertofabian",
          "description": "使用 Everything SDK 实现的快速 Windows 文件搜索",
          "url": "https://github.com/mamertofabian/mcp-everything-search",
          "tags": ["🐍", "🏠", "🪟", "Search"]
        },
        {
          "id": 1006,
          "name": "llm-context.py",
          "author": "cyberchitta",
          "description": "通过 MCP 或剪贴板与 LLM 共享代码上下文",
          "url": "https://github.com/cyberchitta/llm-context.py",
          "tags": ["🐍", "🏠", "LLM", "Context"]
        },
        {
          "id": 1007,
          "name": "mcp-server-opendal",
          "author": "Xuanwo",
          "description": "使用 Apache OpenDAL™ 访问任何存储",
          "url": "https://github.com/Xuanwo/mcp-server-opendal",
          "tags": ["🐍", "🏠", "☁️", "Storage"]
        }
      ]
    },
    {
      "id": 11,
      "name": "金融 & 金融科技",
      "description": "金融数据访问和加密货币市场信息。支持查询实时市场数据、加密货币价格和财务分析。",
      "icon": "💰",
      "items": [
        {
          "id": 1101,
          "name": "coincap-mcp",
          "author": "QuantGeekDev",
          "description": "使用 CoinCap 的公共 API 集成实时加密货币市场数据，无需 API 密钥即可访问加密货币价格和市场信息",
          "url": "https://github.com/QuantGeekDev/coincap-mcp",
          "tags": ["📇", "☁️", "Crypto", "Market"]
        },
        {
          "id": 1102,
          "name": "coinmarket-mcp-server",
          "author": "anjor",
          "description": "Coinmarket API 集成以获取加密货币列表和报价",
          "url": "https://github.com/anjor/coinmarket-mcp-server",
          "tags": ["🐍", "☁️", "Crypto", "Market"]
        },
        {
          "id": 1103,
          "name": "alpha-vantage-mcp",
          "author": "berlinbra",
          "description": "Alpha Vantage API 集成，用于获取股票和加密货币信息",
          "url": "https://github.com/berlinbra/alpha-vantage-mcp",
          "tags": ["🐍", "☁️", "Stocks", "Crypto"]
        },
        {
          "id": 1104,
          "name": "tasty-agent",
          "author": "ferdousbhai",
          "description": "Tastyworks API 集成，用于管理 Tastytrade 平台的交易活动",
          "url": "https://github.com/ferdousbhai/tasty-agent",
          "tags": ["🐍", "☁️", "Trading", "Finance"]
        }
      ]
    },
    {
      "id": 12,
      "name": "知识与记忆",
      "description": "使用知识图谱结构的持久内存存储。使 AI 模型能够跨会话维护和查询结构化信息。",
      "icon": "🧠",
      "items": [
        {
          "id": 1201,
          "name": "server-memory",
          "author": "modelcontextprotocol",
          "description": "基于知识图谱的长期记忆系统用于维护上下文",
          "url": "https://github.com/modelcontextprotocol/servers/tree/main/src/memory",
          "tags": ["📇", "🏠", "Memory", "Graph"]
        },
        {
          "id": 1202,
          "name": "MemoryMesh",
          "author": "CheMiguel23",
          "description": "增强基于图形的记忆，重点关注 AI 角色扮演和故事生成",
          "url": "https://github.com/CheMiguel23/MemoryMesh",
          "tags": ["📇", "🏠", "Memory", "AI"]
        },
        {
          "id": 1203,
          "name": "cognee",
          "author": "topoteretes",
          "description": "AI应用程序和Agent的内存管理器使用各种图存储和向量存储，并允许从 30 多个数据源提取数据",
          "url": "https://github.com/topoteretes/cognee/tree/dev/cognee-mcp",
          "tags": ["📇", "🏠", "Memory", "Vector"]
        },
        {
          "id": 1204,
          "name": "mcp-ragdocs",
          "author": "hannesrudolph",
          "description": "MCP 服务器实现提供了通过矢量搜索检索和处理文档的工具，使 AI 助手能够利用相关文档上下文来增强其响应能力",
          "url": "https://github.com/hannesrudolph/mcp-ragdocs",
          "tags": ["🐍", "🏠", "Vector", "Search"]
        },
        {
          "id": 1205,
          "name": "mcp-zotero",
          "author": "kaliaboi",
          "description": "为 LLM 提供的连接器，用于操作 Zotero Cloud 上的文献集合和资源",
          "url": "https://github.com/kaliaboi/mcp-zotero",
          "tags": ["📇", "☁️", "Literature", "Research"]
        }
      ]
    },
    {
      "id": 13,
      "name": "位置服务",
      "description": "地理和基于位置的服务集成。支持访问地图数据、方向和位置信息。",
      "icon": "🗺️",
      "items": [
        {
          "id": 1301,
          "name": "server-google-maps",
          "author": "modelcontextprotocol",
          "description": "Google 地图集成，提供位置服务、路线规划和地点详细信息",
          "url": "https://github.com/modelcontextprotocol/servers/tree/main/src/google-maps",
          "tags": ["📇", "☁️", "Google", "Maps"]
        },
        {
          "id": 1302,
          "name": "MCP-timeserver",
          "author": "SecretiveShell",
          "description": "访问任意时区的时间并获取当前本地时间",
          "url": "https://github.com/SecretiveShell/MCP-timeserver",
          "tags": ["🐍", "🏠", "Time", "Timezone"]
        },
        {
          "id": 1303,
          "name": "MCP-Geo",
          "author": "webcoderz",
          "description": "支持 nominatim、ArcGIS、Bing 的地理编码 MCP 服务器",
          "url": "https://github.com/webcoderz/MCP-Geo",
          "tags": ["🐍", "🏠", "Geo", "Location"]
        },
        {
          "id": 1304,
          "name": "mcp-server-ipinfo",
          "author": "briandconnelly",
          "description": "使用 IPInfo API 获取 IP 地址的地理位置和网络信息",
          "url": "https://github.com/briandconnelly/mcp-server-ipinfo",
          "tags": ["🐍", "☁️", "IP", "Location"]
        }
      ]
    },
    {
      "id": 14,
      "name": "营销",
      "description": "用于创建和编辑营销内容、处理网页元数据、产品定位和编辑指南的工具。",
      "icon": "🎯",
      "items": [
        {
          "id": 1401,
          "name": "osp_marketing_tools",
          "author": "open-strategy-partners",
          "description": "Open Strategy Partners 提供的营销工具套件，包含写作风格指南、编辑规范和产品营销价值图谱创建工具",
          "url": "https://github.com/open-strategy-partners/osp_marketing_tools",
          "tags": ["🐍", "🏠", "Marketing", "Content"]
        }
      ]
    },
    {
      "id": 15,
      "name": "监测",
      "description": "访问和分析应用程序监控数据。使 AI 模型能够审查错误报告和性能指标。",
      "icon": "📊",
      "items": [
        {
          "id": 1501,
          "name": "server-sentry",
          "author": "modelcontextprotocol",
          "description": "Sentry.io 集成用于错误跟踪和性能监控",
          "url": "https://github.com/modelcontextprotocol/servers/tree/main/src/sentry",
          "tags": ["🐍", "☁️", "Sentry", "Monitoring"]
        },
        {
          "id": 1502,
          "name": "server-raygun",
          "author": "MindscapeHQ",
          "description": "Raygun API V3 集成用于崩溃报告和真实用户监控",
          "url": "https://github.com/MindscapeHQ/mcp-server-raygun",
          "tags": ["📇", "☁️", "Raygun", "Monitoring"]
        },
        {
          "id": 1503,
          "name": "metoro-mcp-server",
          "author": "metoro-io",
          "description": "查询并与 Metoro 监控的 kubernetes 环境交互",
          "url": "https://github.com/metoro-io/metoro-mcp-server",
          "tags": ["🎖️", "🏎️", "☁️", "Kubernetes"]
        },
        {
          "id": 1504,
          "name": "mcp-grafana",
          "author": "grafana",
          "description": "在 Grafana 实例中搜索仪表盘、调查事件并查询数据源",
          "url": "https://github.com/grafana/mcp-grafana",
          "tags": ["🎖️", "🐍", "🏠", "☁️", "Grafana"]
        }
      ]
    },
    {
      "id": 16,
      "name": "搜索",
      "description": "提供各种搜索服务的集成，包括网页搜索、学术文献搜索和专业数据库搜索。",
      "icon": "🔎",
      "items": [
        {
          "id": 1601,
          "name": "server-brave-search",
          "author": "modelcontextprotocol",
          "description": "使用 Brave 的搜索 API 实现网页搜索功能",
          "url": "https://github.com/modelcontextprotocol/servers/tree/main/src/brave-search",
          "tags": ["📇", "☁️", "Brave", "Search"]
        },
        {
          "id": 1602,
          "name": "nyt",
          "author": "angheljf",
          "description": "使用 NYTimes API 搜索文章",
          "url": "https://github.com/angheljf/nyt",
          "tags": ["📇", "☁️", "News", "NYTimes"]
        },
        {
          "id": 1603,
          "name": "server-fetch",
          "author": "modelcontextprotocol",
          "description": "高效获取和处理网页内容，供 AI 使用",
          "url": "https://github.com/modelcontextprotocol/servers/tree/main/src/fetch",
          "tags": ["🐍", "🏠", "☁️", "Web"]
        },
        {
          "id": 1604,
          "name": "mcp-servers-kagi",
          "author": "ac3xx",
          "description": "Kagi 搜索 API 集成",
          "url": "https://github.com/ac3xx/mcp-servers-kagi",
          "tags": ["📇", "☁️", "Kagi", "Search"]
        },
        {
          "id": 1605,
          "name": "exa-mcp-server",
          "author": "exa-labs",
          "description": "模型上下文协议 (MCP) 服务器让 Claude 等 AI 助手可以使用 Exa AI Search API 进行网络搜索",
          "url": "https://github.com/exa-labs/exa-mcp-server",
          "tags": ["🎖️", "📇", "☁️", "AI"]
        },
        {
          "id": 1606,
          "name": "search1api-mcp",
          "author": "fatwang2",
          "description": "通过 search1api 搜索（需要付费 API 密钥）",
          "url": "https://github.com/fatwang2/search1api-mcp",
          "tags": ["📇", "☁️", "API", "Search"]
        },
        {
          "id": 1607,
          "name": "mcp-server-tavily",
          "author": "Tomatio13",
          "description": "Tavily AI 搜索 API",
          "url": "https://github.com/Tomatio13/mcp-server-tavily",
          "tags": ["☁️", "🐍", "AI", "Search"]
        },
        {
          "id": 1608,
          "name": "mcp-tavily",
          "author": "kshern",
          "description": "Tavily AI 搜索 API",
          "url": "https://github.com/kshern/mcp-tavily.git",
          "tags": ["☁️", "📇", "AI", "Search"]
        },
        {
          "id": 1609,
          "name": "arxiv-mcp-server",
          "author": "blazickjp",
          "description": "搜索 ArXiv 研究论文",
          "url": "https://github.com/blazickjp/arxiv-mcp-server",
          "tags": ["☁️", "🐍", "Research", "Papers"]
        },
        {
          "id": 1610,
          "name": "mcp-webresearch",
          "author": "mzxrai",
          "description": "在 Google 上搜索并对任何主题进行深度研究",
          "url": "https://github.com/mzxrai/mcp-webresearch",
          "tags": ["🔍", "📚", "Research", "Google"]
        },
        {
          "id": 1611,
          "name": "mcp-simple-arxiv",
          "author": "andybrandt",
          "description": "MCP for LLM 用于搜索和阅读 arXiv 上的论文",
          "url": "https://github.com/andybrandt/mcp-simple-arxiv",
          "tags": ["🐍", "☁️", "ArXiv", "Papers"]
        },
        {
          "id": 1612,
          "name": "mcp-simple-pubmed",
          "author": "andybrandt",
          "description": "MCP 用于搜索和阅读 PubMed 中的医学/生命科学论文",
          "url": "https://github.com/andybrandt/mcp-simple-pubmed",
          "tags": ["🐍", "☁️", "PubMed", "Medical"]
        },
        {
          "id": 1613,
          "name": "mcp-server-rag-web-browser",
          "author": "apify",
          "description": "一个用于 Apify 的 RAG Web 浏览器 Actor 的 MCP 服务器，可以执行网页搜索、抓取 URL，并以 Markdown 格式返回内容",
          "url": "https://github.com/apify/mcp-server-rag-web-browser",
          "tags": ["📇", "☁️", "RAG", "Web"]
        },
        {
          "id": 1614,
          "name": "MCP-searxng",
          "author": "SecretiveShell",
          "description": "用于连接到 searXNG 实例的 MCP 服务器",
          "url": "https://github.com/SecretiveShell/MCP-searxng",
          "tags": ["🐍", "🏠", "SearXNG", "Search"]
        },
        {
          "id": 1615,
          "name": "Clojars-MCP-Server",
          "author": "Bigsy",
          "description": "Clojars MCP 服务器，提供 Clojure 库的最新依赖信息",
          "url": "https://github.com/Bigsy/Clojars-MCP-Server",
          "tags": ["📇", "☁️", "Clojure", "Dependencies"]
        },
        {
          "id": 1616,
          "name": "MCP-SearXNG",
          "author": "Ihor-Sokoliuk",
          "description": "SearXNG 的模型上下文协议服务器",
          "url": "https://github.com/ihor-sokoliuk/mcp-searxng",
          "tags": ["📇", "🏠", "☁️", "SearXNG"]
        },
        {
          "id": 1617,
          "name": "mcp-hn",
          "author": "erithwik",
          "description": "一个用于搜索 Hacker News、获取热门故事等的 MCP 服务器",
          "url": "https://github.com/erithwik/mcp-hn",
          "tags": ["🐍", "☁️", "HackerNews", "News"]
        },
        {
          "id": 1618,
          "name": "server-google-news",
          "author": "chanmeng",
          "description": "Google News 集成，具有自动主题分类、多语言支持，以及通过 SerpAPI 提供的标题、故事和相关主题的综合搜索功能",
          "url": "https://github.com/ChanMeng666/server-google-news",
          "tags": ["📇", "☁️", "Google", "News"]
        },
        {
          "id": 1619,
          "name": "trieve",
          "author": "devflowinc",
          "description": "通过 Trieve 爬取、嵌入、分块、搜索和检索数据集中的信息",
          "url": "https://github.com/devflowinc/trieve/tree/main/clients/mcp-server",
          "tags": ["🎖️", "📇", "☁️", "🏠", "Search"]
        }
      ]
    },
    {
      "id": 17,
      "name": "安全",
      "description": "提供安全相关的工具和服务集成，包括漏洞扫描、威胁情报和安全审计。",
      "icon": "🔒",
      "items": [
        {
          "id": 1701,
          "name": "mcp-dnstwist",
          "author": "BurtTheCoder",
          "description": "dnstwist 的 MCP 服务器，这是一个强大的 DNS 模糊测试工具，可帮助检测域名抢注、钓鱼和企业窃密行为",
          "url": "https://github.com/BurtTheCoder/mcp-dnstwist",
          "tags": ["📇", "🪟", "☁️", "DNS"]
        },
        {
          "id": 1702,
          "name": "mcp-maigret",
          "author": "BurtTheCoder",
          "description": "maigret 的 MCP 服务器，maigret 是一款强大的 OSINT 工具，可从各种公共来源收集用户帐户信息",
          "url": "https://github.com/BurtTheCoder/mcp-maigret",
          "tags": ["📇", "☁️", "OSINT", "Security"]
        },
        {
          "id": 1703,
          "name": "mcp-shodan",
          "author": "BurtTheCoder",
          "description": "MCP 服务器用于查询 Shodan API 和 Shodan CVEDB",
          "url": "https://github.com/BurtTheCoder/mcp-shodan",
          "tags": ["📇", "☁️", "Shodan", "Security"]
        },
        {
          "id": 1704,
          "name": "mcp-virustotal",
          "author": "BurtTheCoder",
          "description": "用于查询 VirusTotal API 的 MCP 服务器",
          "url": "https://github.com/BurtTheCoder/mcp-virustotal",
          "tags": ["📇", "☁️", "VirusTotal", "Security"]
        },
        {
          "id": 1705,
          "name": "MCP_Security",
          "author": "fr0gger",
          "description": "用于查询 ORKL API 的 MCP 服务器",
          "url": "https://github.com/fr0gger/MCP_Security",
          "tags": ["📇", "🛡️", "☁️", "Security"]
        },
        {
          "id": 1706,
          "name": "mcp-security-audit",
          "author": "qianniuspace",
          "description": "一个强大的 MCP 服务器，审计 npm 包依赖项的安全漏洞",
          "url": "https://github.com/qianniuspace/mcp-security-audit",
          "tags": ["📇", "🛡️", "☁️", "Audit"]
        }
      ]
    },
    {
      "id": 18,
      "name": "旅行与交通",
      "description": "访问旅行和交通信息。可以查询时刻表、路线和实时旅行数据。",
      "icon": "🚆",
      "items": [
        {
          "id": 1801,
          "name": "ns-mcp-server",
          "author": "r-huijts",
          "description": "了解荷兰铁路 (NS) 的旅行信息、时刻表和实时更新",
          "url": "https://github.com/r-huijts/ns-mcp-server",
          "tags": ["📇", "☁️", "Transport", "Railway"]
        }
      ]
    },
    {
      "id": 19,
      "name": "版本控制",
      "description": "与 Git 存储库和版本控制平台交互。通过标准化 API 实现存储库管理、代码分析、拉取请求处理、问题跟踪和其他版本控制操作。",
      "icon": "🔄",
      "items": [
        {
          "id": 1901,
          "name": "server-github",
          "author": "modelcontextprotocol",
          "description": "GitHub API集成用于仓库管理、PR、问题等",
          "url": "https://github.com/modelcontextprotocol/servers/tree/main/src/github",
          "tags": ["📇", "☁️", "GitHub", "Git"]
        },
        {
          "id": 1902,
          "name": "server-gitlab",
          "author": "modelcontextprotocol",
          "description": "GitLab平台集成用于项目管理和CI/CD操作",
          "url": "https://github.com/modelcontextprotocol/servers/tree/main/src/gitlab",
          "tags": ["📇", "☁️", "🏠", "GitLab"]
        },
        {
          "id": 1903,
          "name": "server-git",
          "author": "modelcontextprotocol",
          "description": "直接的Git仓库操作，包括读取、搜索和分析本地仓库",
          "url": "https://github.com/modelcontextprotocol/servers/tree/main/src/git",
          "tags": ["🐍", "🏠", "Git", "Local"]
        },
        {
          "id": 1904,
          "name": "mcp-git-ingest",
          "author": "adhikasp",
          "description": "使用 LLM 阅读和分析 GitHub 存储库",
          "url": "https://github.com/adhikasp/mcp-git-ingest",
          "tags": ["🐍", "🏠", "GitHub", "LLM"]
        }
      ]
    },
    {
      "id": 20,
      "name": "其他工具和集成",
      "description": "各种实用工具和集成，包括内容管理、AI模型交互、文档处理等功能。",
      "icon": "🛠️",
      "items": [
        {
          "id": 2001,
          "name": "actors-mcp-server",
          "author": "apify",
          "description": "使用超过 3,000 个预构建的云工具（称为 Actors）从网站、电商、社交媒体、搜索引擎、地图等提取数据",
          "url": "https://github.com/apify/actors-mcp-server",
          "tags": ["📇", "☁️", "Data", "Scraping"]
        },
        {
          "id": 2002,
          "name": "contentful-mcp",
          "author": "ivo-toby",
          "description": "更新、创建、删除 Contentful Space 中的内容、内容模型和资产",
          "url": "https://github.com/ivo-toby/contentful-mcp",
          "tags": ["📇", "🏠", "CMS", "Content"]
        },
        {
          "id": 2003,
          "name": "mcp-openai",
          "author": "mzxrai",
          "description": "与 OpenAI 最智能的模型聊天",
          "url": "https://github.com/mzxrai/mcp-openai",
          "tags": ["📇", "☁️", "OpenAI", "Chat"]
        },
        {
          "id": 2004,
          "name": "godoc-mcp",
          "author": "mrjoshuak",
          "description": "高效的 Go 文档服务器，让 AI 助手可以智能访问包文档和类型，而无需阅读整个源文件",
          "url": "https://github.com/mrjoshuak/godoc-mcp",
          "tags": ["🏎️", "🏠", "Go", "Docs"]
        },
        {
          "id": 2005,
          "name": "mcp-server-openai",
          "author": "pierrebrunelle",
          "description": "直接从Claude查询OpenAI模型，使用MCP协议",
          "url": "https://github.com/pierrebrunelle/mcp-server-openai",
          "tags": ["🐍", "☁️", "OpenAI", "Integration"]
        },
        {
          "id": 2006,
          "name": "server-everything",
          "author": "modelcontextprotocol",
          "description": "MCP服务器，涵盖MCP协议的所有功能",
          "url": "https://github.com/modelcontextprotocol/servers/tree/main/src/everything",
          "tags": ["📇", "🏠", "MCP", "All"]
        },
        {
          "id": 2007,
          "name": "phabricator-mcp-server",
          "author": "baba786",
          "description": "与Phabricator API交互",
          "url": "https://github.com/baba786/phabricator-mcp-server",
          "tags": ["🐍", "☁️", "Phabricator", "API"]
        },
        {
          "id": 2008,
          "name": "mcp-obsidian",
          "author": "MarkusPfundstein",
          "description": "通过REST API与Obsidian交互",
          "url": "https://github.com/MarkusPfundstein/mcp-obsidian",
          "tags": ["🐍", "☁️", "🏠", "Obsidian"]
        },
        {
          "id": 2009,
          "name": "mcp-obsidian",
          "author": "calclavia",
          "description": "这是一个连接器，允许Claude Desktop（或任何MCP兼容应用程序）读取和搜索包含Markdown笔记的目录（如Obsidian库）",
          "url": "https://github.com/calclavia/mcp-obsidian",
          "tags": ["📇", "🏠", "Obsidian", "Notes"]
        },
        {
          "id": 2010,
          "name": "mcp-youtube",
          "author": "anaisbetts",
          "description": "获取YouTube字幕",
          "url": "https://github.com/anaisbetts/mcp-youtube",
          "tags": ["📇", "☁️", "YouTube", "Captions"]
        },
        {
          "id": 2011,
          "name": "notion_mcp",
          "author": "danhilse",
          "description": "与Notion API集成，管理个人待办事项列表",
          "url": "https://github.com/danhilse/notion_mcp",
          "tags": ["🐍", "☁️", "Notion", "Tasks"]
        },
        {
          "id": 2012,
          "name": "wcgw",
          "author": "rusiaaman",
          "description": "自动化shell执行、计算机控制和编码代理（Mac）",
          "url": "https://github.com/rusiaaman/wcgw/blob/main/src/wcgw/client/mcp_server/Readme.md",
          "tags": ["🐍", "🏠", "Shell", "Automation"]
        },
        {
          "id": 2013,
          "name": "ancestry-mcp",
          "author": "reeeeemo",
          "description": "允许AI读取.ged文件和基因数据",
          "url": "https://github.com/reeeeemo/ancestry-mcp",
          "tags": ["🐍", "🏠", "Genealogy", "Data"]
        },
        {
          "id": 2014,
          "name": "apple-notes-mcp",
          "author": "sirmews",
          "description": "允许AI读取本地Apple Notes数据库（仅限macOS）",
          "url": "https://github.com/sirmews/apple-notes-mcp",
          "tags": ["🐍", "🏠", "Apple", "Notes"]
        },
        {
          "id": 2015,
          "name": "mcp-notion-server",
          "author": "suekou",
          "description": "与Notion API交互",
          "url": "https://github.com/suekou/mcp-notion-server",
          "tags": ["📇", "🏠", "Notion", "API"]
        },
        {
          "id": 2016,
          "name": "unichat-mcp-server",
          "author": "amidabuddha",
          "description": "使用MCP协议通过工具或预定义的提示发送请求给OpenAI、MistralAI、Anthropic、xAI或Google AI",
          "url": "https://github.com/amidabuddha/unichat-mcp-server",
          "tags": ["🐍", "📇", "☁️", "AI"]
        },
        {
          "id": 2017,
          "name": "mcp-miro",
          "author": "evalstate",
          "description": "访问 MIRO 白板，批量创建和读取项目",
          "url": "https://github.com/evalstate/mcp-miro",
          "tags": ["📇", "☁️", "Miro", "Whiteboard"]
        },
        {
          "id": 2018,
          "name": "jira-mcp-server",
          "author": "KS-GEN-AI",
          "description": "通过 JQL 和 API 读取 Jira 数据，并执行创建和编辑工单的请求",
          "url": "https://github.com/KS-GEN-AI/jira-mcp-server",
          "tags": ["📇", "☁️", "🍎", "🪟", "Jira"]
        },
        {
          "id": 2019,
          "name": "confluence-mcp-server",
          "author": "KS-GEN-AI",
          "description": "通过 CQL 获取 Confluence 数据并阅读页面",
          "url": "https://github.com/KS-GEN-AI/confluence-mcp-server",
          "tags": ["📇", "☁️", "🍎", "🪟", "Confluence"]
        },
        {
          "id": 2020,
          "name": "mcp-atlassian",
          "author": "sooperset",
          "description": "Confluence工作区的自然语言搜索和内容访问",
          "url": "https://github.com/sooperset/mcp-atlassian",
          "tags": ["🐍", "☁️", "Atlassian", "Search"]
        },
        {
          "id": 2021,
          "name": "any-chat-completions-mcp",
          "author": "pyroprompts",
          "description": "与任何其他OpenAI SDK兼容的聊天完成API对话，例如Perplexity、Groq、xAI等",
          "url": "https://github.com/pyroprompts/any-chat-completions-mcp",
          "tags": ["AI", "Chat", "Integration"]
        },
        {
          "id": 2022,
          "name": "mcp-installer",
          "author": "anaisbetts",
          "description": "一个MCP服务器，可以为您安装其他MCP服务器",
          "url": "https://github.com/anaisbetts/mcp-installer",
          "tags": ["🐍", "🏠", "Installer", "MCP"]
        },
        {
          "id": 2023,
          "name": "mcp-server-perplexity",
          "author": "tanigami",
          "description": "与 Perplexity API 交互",
          "url": "https://github.com/tanigami/mcp-server-perplexity",
          "tags": ["🐍", "☁️", "Perplexity", "AI"]
        },
        {
          "id": 2024,
          "name": "wikimedia-enterprise-model-context-protocol",
          "author": "future-audiences",
          "description": "维基百科文章查找 API",
          "url": "https://gitlab.wikimedia.org/repos/future-audiences/wikimedia-enterprise-model-context-protocol",
          "tags": ["🐍", "☁️", "Wikipedia", "API"]
        },
        {
          "id": 2025,
          "name": "mcp-simple-timeserver",
          "author": "andybrandt",
          "description": "MCP 服务器允许检查客户端计算机上的本地时间或 NTP 服务器上的当前 UTC 时间",
          "url": "https://github.com/andybrandt/mcp-simple-timeserver",
          "tags": ["🐍", "🏠", "☁️", "Time"]
        },
        {
          "id": 2026,
          "name": "mcp-simple-openai-assistant",
          "author": "andybrandt",
          "description": "MCP 与 OpenAI 助手对话（Claude 可以使用任何 GPT 模型作为他的助手）",
          "url": "https://github.com/andybrandt/mcp-simple-openai-assistant",
          "tags": ["🐍", "☁️", "OpenAI", "Assistant"]
        },
        {
          "id": 2027,
          "name": "mcp-hfspace",
          "author": "llmindset",
          "description": "直接从 Claude 使用 HuggingFace Spaces。使用开源图像生成、聊天、视觉任务等",
          "url": "https://github.com/evalstate/mcp-hfspace",
          "tags": ["📇", "☁️", "HuggingFace", "AI"]
        },
        {
          "id": 2028,
          "name": "mcp-manager",
          "author": "zueai",
          "description": "简单的 Web UI 用于安装和管理 Claude 桌面应用程序的 MCP 服务器",
          "url": "https://github.com/zueai/mcp-manager",
          "tags": ["📇", "☁️", "Manager", "UI"]
        },
        {
          "id": 2029,
          "name": "mcp-cli",
          "author": "wong2",
          "description": "用于测试 MCP 服务器的 CLI 工具",
          "url": "https://github.com/wong2/mcp-cli",
          "tags": ["📇", "🏠", "CLI", "Testing"]
        },
        {
          "id": 2030,
          "name": "mcp-vegalite-server",
          "author": "isaacwasserman",
          "description": "使用 VegaLite 格式和渲染器从获取的数据生成可视化效果",
          "url": "https://github.com/isaacwasserman/mcp-vegalite-server",
          "tags": ["🐍", "🏠", "Visualization", "Data"]
        },
        {
          "id": 2031,
          "name": "homeassistant-mcp",
          "author": "tevonsb",
          "description": "访问家庭助理数据和控制设备（灯、开关、恒温器等）",
          "url": "https://github.com/tevonsb/homeassistant-mcp",
          "tags": ["📇", "🏠", "HomeAssistant", "IoT"]
        },
        {
          "id": 2032,
          "name": "mcp-server-home-assistant",
          "author": "allenporter",
          "description": "通过模型上下文协议服务器暴露所有 Home Assistant 语音意图，实现智能家居控制",
          "url": "https://github.com/allenporter/mcp-server-home-assistant",
          "tags": ["🐍", "🏠", "HomeAssistant", "Voice"]
        },
        {
          "id": 2033,
          "name": "all-in-one-model-context-protocol",
          "author": "nguyenvanduocit",
          "description": "一些对开发人员有用的工具",
          "url": "https://github.com/nguyenvanduocit/all-in-one-model-context-protocol",
          "tags": ["🏎️", "🏠", "Tools", "Dev"]
        },
        {
          "id": 2034,
          "name": "mac-apps-launcher",
          "author": "joshuarileydev",
          "description": "用于列出和启动 MacOS 上的应用程序的 MCP 服务器",
          "url": "https://github.com/JoshuaRileyDev/mac-apps-launcher",
          "tags": ["📇", "🏠", "MacOS", "Apps"]
        },
        {
          "id": 2035,
          "name": "mcp-datetime",
          "author": "ZeparHyfar",
          "description": "MCP 服务器提供多种格式的日期和时间函数",
          "url": "https://github.com/ZeparHyfar/mcp-datetime",
          "tags": ["DateTime", "Utils"]
        },
        {
          "id": 2036,
          "name": "piapi-mcp-server",
          "author": "apinetwork",
          "description": "PiAPI MCP服务器使用户能够直接从Claude或其他MCP兼容应用程序中使用Midjourney等生成媒体内容",
          "url": "https://github.com/apinetwork/piapi-mcp-server",
          "tags": ["📇", "☁️", "Media", "Generation"]
        },
        {
          "id": 2037,
          "name": "mcp-difyworkflow-server",
          "author": "gotoolkits",
          "description": "MCP 服务器 Tools 实现查询与执行 Dify AI 平台上自定义的工作流",
          "url": "https://github.com/gotoolkits/DifyWorkflow",
          "tags": ["🚀", "☁️", "Dify", "Workflow"]
        },
        {
          "id": 2038,
          "name": "hn-server",
          "author": "pskill9",
          "description": "解析 Hacker News 的 HTML 内容，为不同类型的故事提供结构化数据",
          "url": "https://github.com/pskill9/hn-server",
          "tags": ["📇", "☁️", "HackerNews", "Parser"]
        },
        {
          "id": 2039,
          "name": "screenpipe",
          "author": "mediar-ai",
          "description": "本地优先的系统，支持屏幕/音频捕获并带有时间戳索引、SQL/嵌入存储、语义搜索等功能",
          "url": "https://github.com/mediar-ai/screenpipe",
          "tags": ["🎖️", "🦀", "🏠", "🍎", "Screen"]
        },
        {
          "id": 2040,
          "name": "bear-mcp-server",
          "author": "akseyh",
          "description": "允许 AI 读取您的 Bear Notes（仅支持 macOS）",
          "url": "https://github.com/akseyh/bear-mcp-server",
          "tags": ["Notes", "MacOS", "Bear"]
        },
        {
          "id": 2041,
          "name": "ws-mcp",
          "author": "nick1udwig",
          "description": "使用 WebSocket 包装 MCP 服务器",
          "url": "https://github.com/nick1udwig/ws-mcp",
          "tags": ["WebSocket", "Wrapper"]
        },
        {
          "id": 2042,
          "name": "bitcoin-mcp",
          "author": "AbdelStark",
          "description": "一个MCP服务器，使 AI 模型能够与比特币交互，允许它们生成密钥、验证地址、解码交易、查询区块链等",
          "url": "https://github.com/AbdelStark/bitcoin-mcp",
          "tags": ["Bitcoin", "Blockchain"]
        },
        {
          "id": 2043,
          "name": "mcp-kibela",
          "author": "kj455",
          "description": "Kibela 与 MCP 的集成",
          "url": "https://github.com/kj455/mcp-kibela",
          "tags": ["📇", "☁️", "Kibela", "Integration"]
        }
      ]
    },
    {
      "id": 21,
      "name": "框架",
      "description": "用于构建 MCP 服务器和客户端的开发框架和 SDK。",
      "icon": "🔨",
      "items": [
        {
          "id": 2101,
          "name": "FastMCP",
          "author": "jlowin",
          "description": "用于在 Python 中构建 MCP 服务器的高级框架",
          "url": "https://github.com/jlowin/fastmcp",
          "tags": ["🐍", "Framework", "Python"]
        },
        {
          "id": 2102,
          "name": "FastMCP",
          "author": "punkpeye",
          "description": "用于在 TypeScript 中构建 MCP 服务器的高级框架",
          "url": "https://github.com/punkpeye/fastmcp",
          "tags": ["📇", "Framework", "TypeScript"]
        },
        {
          "id": 2103,
          "name": "foxy-contexts",
          "author": "strowk",
          "description": "用于以声明方式编写 MCP 服务器的 Golang 库，包含功能测试",
          "url": "https://github.com/strowk/foxy-contexts",
          "tags": ["🏎️", "Framework", "Go"]
        },
        {
          "id": 2104,
          "name": "genkit",
          "author": "firebase",
          "description": "提供 Genkit 与模型上下文协议（MCP）之间的集成",
          "url": "https://github.com/firebase/genkit/tree/main/js/plugins/mcp",
          "tags": ["📇", "Integration", "Firebase"]
        },
        {
          "id": 2105,
          "name": "LiteMCP",
          "author": "wong2",
          "description": "用于在 JavaScript/TypeScript 中构建 MCP 服务器的高级框架",
          "url": "https://github.com/wong2/litemcp",
          "tags": ["⚡️", "Framework", "TypeScript"]
        },
        {
          "id": 2106,
          "name": "mcp-go",
          "author": "mark3labs",
          "description": "用于构建MCP服务器和客户端的Golang SDK",
          "url": "https://github.com/mark3labs/mcp-go",
          "tags": ["🏎️", "SDK", "Go"]
        },
        {
          "id": 2107,
          "name": "mcp-framework",
          "author": "QuantGeekDev",
          "description": "用于构建 MCP 服务器的快速而优雅的 TypeScript 框架",
          "url": "https://github.com/QuantGeekDev/mcp-framework",
          "tags": ["⚡️", "Framework", "TypeScript"]
        },
        {
          "id": 2108,
          "name": "mcp-proxy",
          "author": "punkpeye",
          "description": "用于使用 stdio 传输的 MCP 服务器的 TypeScript SSE 代理",
          "url": "https://github.com/punkpeye/mcp-proxy",
          "tags": ["📇", "Proxy", "TypeScript"]
        },
        {
          "id": 2109,
          "name": "mcp-rs-template",
          "author": "linux-china",
          "description": "Rust的MCP CLI服务器模板",
          "url": "https://github.com/linux-china/mcp-rs-template",
          "tags": ["🦀", "Template", "Rust"]
        },
        {
          "id": 2110,
          "name": "mcp-golang",
          "author": "metoro-io",
          "description": "用于构建 MCP 服务器的 Golang 框架，专注于类型安全",
          "url": "https://github.com/metoro-io/mcp-golang",
          "tags": ["🏎️", "Framework", "Go"]
        },
        {
          "id": 2111,
          "name": "langchain-mcp",
          "author": "rectalogic",
          "description": "提供LangChain中MCP工具调用支持，允许将MCP工具集成到LangChain工作流中",
          "url": "https://github.com/rectalogic/langchain-mcp",
          "tags": ["🐍", "LangChain", "Integration"]
        },
        {
          "id": 2112,
          "name": "ModelContextProtocol.NET",
          "author": "salty-flower",
          "description": "基于 .NET 9 的 C# MCP 服务器 SDK ，支持 NativeAOT",
          "url": "https://github.com/salty-flower/ModelContextProtocol.NET",
          "tags": ["#️⃣", "🏠", "SDK", ".NET"]
        },
        {
          "id": 2113,
          "name": "spring-ai-mcp",
          "author": "spring-projects-experimental",
          "description": "用于构建 MCP 客户端和服务器的 Java SDK 和 Spring Framework 集成，支持多种可插拔的传输选项",
          "url": "https://github.com/spring-projects-experimental/spring-ai-mcp",
          "tags": ["☕", "🌱", "SDK", "Java"]
        },
        {
          "id": 2114,
          "name": "codemirror-mcp",
          "author": "marimo-team",
          "description": "CodeMirror 扩展，实现了用于资源提及和提示命令的模型上下文协议 (MCP)",
          "url": "https://github.com/marimo-team/codemirror-mcp",
          "tags": ["Editor", "Extension", "CodeMirror"]
        }
      ]
    },
    {
      "id": 22,
      "name": "实用工具",
      "description": "各种 MCP 相关的实用工具、网关和代理。",
      "icon": "🔧",
      "items": [
        {
          "id": 2201,
          "name": "mcp-server-and-gw",
          "author": "boilingdata",
          "description": "带有示例服务器和 MCP 客户端的 MCP stdio 到 HTTP SSE 传输网关",
          "url": "https://github.com/boilingdata/mcp-server-and-gw",
          "tags": ["📇", "Gateway", "SSE"]
        },
        {
          "id": 2202,
          "name": "mcp-langchain-ts-client",
          "author": "isaacwasserman",
          "description": "在 LangChain.js 中使用 MCP 提供的工具",
          "url": "https://github.com/isaacwasserman/mcp-langchain-ts-client",
          "tags": ["📇", "LangChain", "Client"]
        },
        {
          "id": 2203,
          "name": "mcp-gateway",
          "author": "lightconetech",
          "description": "MCP SSE 服务器的网关演示",
          "url": "https://github.com/lightconetech/mcp-gateway",
          "tags": ["📇", "Gateway", "Demo"]
        },
        {
          "id": 2204,
          "name": "mcphost",
          "author": "mark3labs",
          "description": "一个 CLI 主机应用程序，使大型语言模型 (LLM) 能够通过模型上下文协议 (MCP) 与外部工具交互",
          "url": "https://github.com/mark3labs/mcphost",
          "tags": ["🏎️", "CLI", "Host"]
        },
        {
          "id": 2205,
          "name": "MCP-Connect",
          "author": "EvalsOne",
          "description": "一个小工具，使基于云的 AI 服务能够通过 HTTP/HTTPS 请求访问本地的基于 Stdio 的 MCP 服务器",
          "url": "https://github.com/EvalsOne/MCP-Connect",
          "tags": ["📇", "Utility", "Cloud"]
        },
        {
          "id": 2206,
          "name": "MCP-Bridge",
          "author": "SecretiveShell",
          "description": "OpenAI 中间件代理，用于在任何现有的 OpenAI 兼容客户端中使用 MCP",
          "url": "https://github.com/SecretiveShell/MCP-Bridge",
          "tags": ["🐍", "Proxy", "OpenAI"]
        },
        {
          "id": 2207,
          "name": "mcp-proxy",
          "author": "sparfenyuk",
          "description": "MCP stdio 到 SSE 的传输网关",
          "url": "https://github.com/sparfenyuk/mcp-proxy",
          "tags": ["🐍", "Gateway", "SSE"]
        },
        {
          "id": 2208,
          "name": "gpt-computer-assistant",
          "author": "upsonic",
          "description": "用于构建垂直 AI 代理的框架",
          "url": "https://github.com/Upsonic/gpt-computer-assistant",
          "tags": ["🐍", "Framework", "AI"]
        }
      ]
    }
  ],
  "tags": {
    "🌐": "Web",
    "⚡️": "Fast",
    "🖱️": "Interactive",
    "📇": "Data",
    "☁️": "Cloud",
    "🏠": "Self-hosted",
    "🍎": "Apple",
    "🐍": "Python",
    "📹": "Video",
    "🎬": "Editing",
    "🎖️": "Official",
    "🏎️": "Performance",
    "🔒": "Security",
    "🖥️": "Terminal",
    "🛠️": "Tools",
    "💬": "Interactive",
    "🚀": "Fast",
    "🗄️": "Database",
    "🦀": "Rust",
    "🔨": "Framework",
    "🔧": "Utility",
    "☕": "Java",
    "🌱": "Spring",
    "#️⃣": "C#"
  }
} 